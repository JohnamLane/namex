#!/usr/bin/env groovy
// Copyright Â© 2018 Province of British Columbia
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


// define groovy functions
import groovy.json.JsonOutput

// pipeline

//node/pod needs environment setup for testing
    def cypress_e2e_label = "cypress-e2e-image${UUID.randomUUID().toString()}"
    podTemplate(label: cypress_e2e_label, name: cypress_e2e_label, serviceAccount: 'jenkins', cloud: 'openshift', containers: [
        containerTemplate(
            name: 'jnlp',
            image: 'docker-registry.default.svc:5000/servicebc-ne-tools/cypress:latest',
            resourceRequestCpu: '500m',
            resourceLimitCpu: '1000m',
            resourceRequestMemory: '1Gi',
            resourceLimitMemory: '4Gi',
            workingDir: '',
            command: '',
            args: '${computer.jnlpmac} ${computer.name}',
            envVars: [
                secretEnvVar(key: 'KEYCLOAK_AUTH_URL', secretName: 'e2e-secrets', secretKey: 'keycloakAuthURL'),
                secretEnvVar(key: 'KEYCLOAK_AUTH_BODY', secretName: 'e2e-secrets', secretKey: 'keycloakAuthBody'),                
                secretEnvVar(key: 'TEST_CC', secretName: 'e2e-secrets', secretKey: 'TestCC'),
                secretEnvVar(key: 'TEST_CC_CVD', secretName: 'e2e-secrets', secretKey: 'TestCVD'),
                secretEnvVar(key: 'KEYCLOAK_PASS', secretName: 'e2e-secrets', secretKey: 'KeycloakCredP'),
                secretEnvVar(key: 'KEYCLOAK_USER', secretName: 'e2e-secrets', secretKey: 'KeycloakCredU'),
                secretEnvVar(key: 'IDIR_USER', secretName: 'e2e-secrets', secretKey: 'IDIRCredU'),
                secretEnvVar(key: 'IDIR_PASS', secretName: 'e2e-secrets', secretKey: 'IDIRCredP')
            ]
        )
    ])
    {    
        node (cypress_e2e_label) {    

            stage('Checkout') {                
                    echo "checking out source"
                    echo "Build: ${BUILD_ID}"
                    checkout scm              
            } 

            stage("install cypress") {
                    sh '''
                         cd cypress-e2e
                         npm install                         
                    '''
                
            }

            stage("Run NR creation script"){
                    sh '''
                         cd cypress-e2e
                         node_modules/.bin/cypress run --spec "cypress/integration/nro_create.spec.js"                        
                    '''
            }
            
            stage ("Sleep to wait for extractor") {		
                sleep 120		
            }

            stage("Run namex edit scripts"){
                    sh '''
                         cd cypress-e2e
                         node_modules/.bin/cypress run --spec "cypress/integration/namex_extractor.spec.js,cypress/integration/namex_edit.spec.js"                        
                    '''
            }

            stage("Cancel NRs in NameX"){
                    sh '''
                         cd cypress-e2e
                         node_modules/.bin/cypress run --spec "cypress/integration/namex_cancel.spec.js"                        
                    '''
            }

            stage("Verify names in NRO"){
                    sh '''
                         cd cypress-e2e
                         node_modules/.bin/cypress run --spec "cypress/integration/nro_verify.spec.js"                        
                    '''
            }
    }
}
